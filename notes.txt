------------------------------------------------
----------------EXTRA CHALLENGES----------------
------------------------------------------------
-- implement restriction that users can only review a tour that they have actually booked

-- implement nested booking routes: /tours/:id/bookings and /users/"id/bookings

-- improve tour dates: add a participants and a soldOut field to each date. A date then becomes like an instannce of the tour. Then, when a user books, they need to select one of the dates. A new booking will increase the number of participants in the date, until it is booked out (participants > maxGroupSize). So, when a user wants to book, you need to check if tour on the selected date is still available

-- implement advanced authentication features: confirm user email, keep users logged in with refresh tokens, two-factor authentication, etc. 

-- implement a sign up form, similar to the login form

-- on the tour detail page, if a user has taken a tour, allow them to add a review directly on the website. Implement a form for this;

-- Hide the entire booking section on the tour detail page if current user has already booked the tour (also prevent duplicate bookings on the model);

-- implement 'like tour' functionality, with favourite tour page

-- on the user account page, implement the 'My Reviews" page, where all reviews are displayed, and a user can edit them. (If you know React, this woulkd be an amazing way to user the Natours API and train your skills!)

-- For admins, implement all the "Manage" pages, where they can CRUD tours, users, reviews and bookings


------------------------------------------------
-----------------NEEDS FIXING-------------------
------------------------------------------------
- The only thing that does not work is the users logging in from section 12 --> there are issues with permissions (check the console)
- Once that is solved everything else should work --> postman tests worked just need to verify they actual site functionality

------------------------------------------------
-------------------GIT THINGS-------------------
------------------------------------------------
ADD A FILE TO STAGING
  git add 'filename'

COMMIT THE STAGING
   git commit -m "a note on what is being added"

PUSH TO THE REPO
   git push -u origin main